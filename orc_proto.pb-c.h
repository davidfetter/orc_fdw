/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_orc_5fproto_2eproto__INCLUDED
#define PROTOBUF_C_orc_5fproto_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _IntegerStatistics IntegerStatistics;
typedef struct _DoubleStatistics DoubleStatistics;
typedef struct _StringStatistics StringStatistics;
typedef struct _BucketStatistics BucketStatistics;
typedef struct _DecimalStatistics DecimalStatistics;
typedef struct _ColumnStatistics ColumnStatistics;
typedef struct _RowIndexEntry RowIndexEntry;
typedef struct _RowIndex RowIndex;
typedef struct _Stream Stream;
typedef struct _ColumnEncoding ColumnEncoding;
typedef struct _StripeFooter StripeFooter;
typedef struct _Type Type;
typedef struct _StripeInformation StripeInformation;
typedef struct _UserMetadataItem UserMetadataItem;
typedef struct _Footer Footer;
typedef struct _PostScript PostScript;


/* --- enums --- */

typedef enum _Stream__Kind {
  STREAM__KIND__PRESENT = 0,
  STREAM__KIND__DATA = 1,
  STREAM__KIND__LENGTH = 2,
  STREAM__KIND__DICTIONARY_DATA = 3,
  STREAM__KIND__DICTIONARY_COUNT = 4,
  STREAM__KIND__SECONDARY = 5,
  STREAM__KIND__ROW_INDEX = 6
} Stream__Kind;
typedef enum _ColumnEncoding__Kind {
  COLUMN_ENCODING__KIND__DIRECT = 0,
  COLUMN_ENCODING__KIND__DICTIONARY = 1
} ColumnEncoding__Kind;
typedef enum _Type__Kind {
  TYPE__KIND__BOOLEAN = 0,
  TYPE__KIND__BYTE = 1,
  TYPE__KIND__SHORT = 2,
  TYPE__KIND__INT = 3,
  TYPE__KIND__LONG = 4,
  TYPE__KIND__FLOAT = 5,
  TYPE__KIND__DOUBLE = 6,
  TYPE__KIND__STRING = 7,
  TYPE__KIND__BINARY = 8,
  TYPE__KIND__TIMESTAMP = 9,
  TYPE__KIND__LIST = 10,
  TYPE__KIND__MAP = 11,
  TYPE__KIND__STRUCT = 12,
  TYPE__KIND__UNION = 13,
  TYPE__KIND__DECIMAL = 14
} Type__Kind;
typedef enum _CompressionKind {
  COMPRESSION_KIND__NONE = 0,
  COMPRESSION_KIND__ZLIB = 1,
  COMPRESSION_KIND__SNAPPY = 2,
  COMPRESSION_KIND__LZO = 3
} CompressionKind;

/* --- messages --- */

struct  _IntegerStatistics
{
  ProtobufCMessage base;
  protobuf_c_boolean has_minimum;
  int64_t minimum;
  protobuf_c_boolean has_maximum;
  int64_t maximum;
  protobuf_c_boolean has_sum;
  int64_t sum;
};
#define INTEGER_STATISTICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&integer_statistics__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _DoubleStatistics
{
  ProtobufCMessage base;
  protobuf_c_boolean has_minimum;
  double minimum;
  protobuf_c_boolean has_maximum;
  double maximum;
  protobuf_c_boolean has_sum;
  double sum;
};
#define DOUBLE_STATISTICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&double_statistics__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _StringStatistics
{
  ProtobufCMessage base;
  char *minimum;
  char *maximum;
};
#define STRING_STATISTICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&string_statistics__descriptor) \
    , NULL, NULL }


struct  _BucketStatistics
{
  ProtobufCMessage base;
  size_t n_count;
  uint64_t *count;
};
#define BUCKET_STATISTICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&bucket_statistics__descriptor) \
    , 0,NULL }


struct  _DecimalStatistics
{
  ProtobufCMessage base;
  char *minimum;
  char *maximum;
  char *sum;
};
#define DECIMAL_STATISTICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&decimal_statistics__descriptor) \
    , NULL, NULL, NULL }


struct  _ColumnStatistics
{
  ProtobufCMessage base;
  protobuf_c_boolean has_numberofvalues;
  uint64_t numberofvalues;
  IntegerStatistics *intstatistics;
  DoubleStatistics *doublestatistics;
  StringStatistics *stringstatistics;
  BucketStatistics *bucketstatistics;
  DecimalStatistics *decimalstatistics;
};
#define COLUMN_STATISTICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&column_statistics__descriptor) \
    , 0,0, NULL, NULL, NULL, NULL, NULL }


struct  _RowIndexEntry
{
  ProtobufCMessage base;
  size_t n_positions;
  uint64_t *positions;
  ColumnStatistics *statistics;
};
#define ROW_INDEX_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&row_index_entry__descriptor) \
    , 0,NULL, NULL }


struct  _RowIndex
{
  ProtobufCMessage base;
  size_t n_entry;
  RowIndexEntry **entry;
};
#define ROW_INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&row_index__descriptor) \
    , 0,NULL }


struct  _Stream
{
  ProtobufCMessage base;
  Stream__Kind kind;
  protobuf_c_boolean has_column;
  uint32_t column;
  protobuf_c_boolean has_length;
  uint64_t length;
};
#define STREAM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stream__descriptor) \
    , 0, 0,0, 0,0 }


struct  _ColumnEncoding
{
  ProtobufCMessage base;
  ColumnEncoding__Kind kind;
  protobuf_c_boolean has_dictionarysize;
  uint32_t dictionarysize;
};
#define COLUMN_ENCODING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&column_encoding__descriptor) \
    , 0, 0,0 }


struct  _StripeFooter
{
  ProtobufCMessage base;
  size_t n_streams;
  Stream **streams;
  size_t n_columns;
  ColumnEncoding **columns;
};
#define STRIPE_FOOTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stripe_footer__descriptor) \
    , 0,NULL, 0,NULL }


struct  _Type
{
  ProtobufCMessage base;
  Type__Kind kind;
  size_t n_subtypes;
  uint32_t *subtypes;
  size_t n_fieldnames;
  char **fieldnames;
};
#define TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&type__descriptor) \
    , 0, 0,NULL, 0,NULL }


struct  _StripeInformation
{
  ProtobufCMessage base;
  protobuf_c_boolean has_offset;
  uint64_t offset;
  protobuf_c_boolean has_indexlength;
  uint64_t indexlength;
  protobuf_c_boolean has_datalength;
  uint64_t datalength;
  protobuf_c_boolean has_footerlength;
  uint64_t footerlength;
  protobuf_c_boolean has_numberofrows;
  uint64_t numberofrows;
};
#define STRIPE_INFORMATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&stripe_information__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _UserMetadataItem
{
  ProtobufCMessage base;
  char *name;
  ProtobufCBinaryData value;
};
#define USER_METADATA_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&user_metadata_item__descriptor) \
    , NULL, {0,NULL} }


struct  _Footer
{
  ProtobufCMessage base;
  protobuf_c_boolean has_headerlength;
  uint64_t headerlength;
  protobuf_c_boolean has_contentlength;
  uint64_t contentlength;
  size_t n_stripes;
  StripeInformation **stripes;
  size_t n_types;
  Type **types;
  size_t n_metadata;
  UserMetadataItem **metadata;
  protobuf_c_boolean has_numberofrows;
  uint64_t numberofrows;
  size_t n_statistics;
  ColumnStatistics **statistics;
  protobuf_c_boolean has_rowindexstride;
  uint32_t rowindexstride;
};
#define FOOTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&footer__descriptor) \
    , 0,0, 0,0, 0,NULL, 0,NULL, 0,NULL, 0,0, 0,NULL, 0,0 }


struct  _PostScript
{
  ProtobufCMessage base;
  protobuf_c_boolean has_footerlength;
  uint64_t footerlength;
  protobuf_c_boolean has_compression;
  CompressionKind compression;
  protobuf_c_boolean has_compressionblocksize;
  uint64_t compressionblocksize;
  size_t n_version;
  uint32_t *version;
  char *magic;
};
#define POST_SCRIPT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&post_script__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL, NULL }


/* IntegerStatistics methods */
void   integer_statistics__init
                     (IntegerStatistics         *message);
size_t integer_statistics__get_packed_size
                     (const IntegerStatistics   *message);
size_t integer_statistics__pack
                     (const IntegerStatistics   *message,
                      uint8_t             *out);
size_t integer_statistics__pack_to_buffer
                     (const IntegerStatistics   *message,
                      ProtobufCBuffer     *buffer);
IntegerStatistics *
       integer_statistics__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   integer_statistics__free_unpacked
                     (IntegerStatistics *message,
                      ProtobufCAllocator *allocator);
/* DoubleStatistics methods */
void   double_statistics__init
                     (DoubleStatistics         *message);
size_t double_statistics__get_packed_size
                     (const DoubleStatistics   *message);
size_t double_statistics__pack
                     (const DoubleStatistics   *message,
                      uint8_t             *out);
size_t double_statistics__pack_to_buffer
                     (const DoubleStatistics   *message,
                      ProtobufCBuffer     *buffer);
DoubleStatistics *
       double_statistics__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   double_statistics__free_unpacked
                     (DoubleStatistics *message,
                      ProtobufCAllocator *allocator);
/* StringStatistics methods */
void   string_statistics__init
                     (StringStatistics         *message);
size_t string_statistics__get_packed_size
                     (const StringStatistics   *message);
size_t string_statistics__pack
                     (const StringStatistics   *message,
                      uint8_t             *out);
size_t string_statistics__pack_to_buffer
                     (const StringStatistics   *message,
                      ProtobufCBuffer     *buffer);
StringStatistics *
       string_statistics__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   string_statistics__free_unpacked
                     (StringStatistics *message,
                      ProtobufCAllocator *allocator);
/* BucketStatistics methods */
void   bucket_statistics__init
                     (BucketStatistics         *message);
size_t bucket_statistics__get_packed_size
                     (const BucketStatistics   *message);
size_t bucket_statistics__pack
                     (const BucketStatistics   *message,
                      uint8_t             *out);
size_t bucket_statistics__pack_to_buffer
                     (const BucketStatistics   *message,
                      ProtobufCBuffer     *buffer);
BucketStatistics *
       bucket_statistics__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   bucket_statistics__free_unpacked
                     (BucketStatistics *message,
                      ProtobufCAllocator *allocator);
/* DecimalStatistics methods */
void   decimal_statistics__init
                     (DecimalStatistics         *message);
size_t decimal_statistics__get_packed_size
                     (const DecimalStatistics   *message);
size_t decimal_statistics__pack
                     (const DecimalStatistics   *message,
                      uint8_t             *out);
size_t decimal_statistics__pack_to_buffer
                     (const DecimalStatistics   *message,
                      ProtobufCBuffer     *buffer);
DecimalStatistics *
       decimal_statistics__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   decimal_statistics__free_unpacked
                     (DecimalStatistics *message,
                      ProtobufCAllocator *allocator);
/* ColumnStatistics methods */
void   column_statistics__init
                     (ColumnStatistics         *message);
size_t column_statistics__get_packed_size
                     (const ColumnStatistics   *message);
size_t column_statistics__pack
                     (const ColumnStatistics   *message,
                      uint8_t             *out);
size_t column_statistics__pack_to_buffer
                     (const ColumnStatistics   *message,
                      ProtobufCBuffer     *buffer);
ColumnStatistics *
       column_statistics__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   column_statistics__free_unpacked
                     (ColumnStatistics *message,
                      ProtobufCAllocator *allocator);
/* RowIndexEntry methods */
void   row_index_entry__init
                     (RowIndexEntry         *message);
size_t row_index_entry__get_packed_size
                     (const RowIndexEntry   *message);
size_t row_index_entry__pack
                     (const RowIndexEntry   *message,
                      uint8_t             *out);
size_t row_index_entry__pack_to_buffer
                     (const RowIndexEntry   *message,
                      ProtobufCBuffer     *buffer);
RowIndexEntry *
       row_index_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   row_index_entry__free_unpacked
                     (RowIndexEntry *message,
                      ProtobufCAllocator *allocator);
/* RowIndex methods */
void   row_index__init
                     (RowIndex         *message);
size_t row_index__get_packed_size
                     (const RowIndex   *message);
size_t row_index__pack
                     (const RowIndex   *message,
                      uint8_t             *out);
size_t row_index__pack_to_buffer
                     (const RowIndex   *message,
                      ProtobufCBuffer     *buffer);
RowIndex *
       row_index__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   row_index__free_unpacked
                     (RowIndex *message,
                      ProtobufCAllocator *allocator);
/* Stream methods */
void   stream__init
                     (Stream         *message);
size_t stream__get_packed_size
                     (const Stream   *message);
size_t stream__pack
                     (const Stream   *message,
                      uint8_t             *out);
size_t stream__pack_to_buffer
                     (const Stream   *message,
                      ProtobufCBuffer     *buffer);
Stream *
       stream__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stream__free_unpacked
                     (Stream *message,
                      ProtobufCAllocator *allocator);
/* ColumnEncoding methods */
void   column_encoding__init
                     (ColumnEncoding         *message);
size_t column_encoding__get_packed_size
                     (const ColumnEncoding   *message);
size_t column_encoding__pack
                     (const ColumnEncoding   *message,
                      uint8_t             *out);
size_t column_encoding__pack_to_buffer
                     (const ColumnEncoding   *message,
                      ProtobufCBuffer     *buffer);
ColumnEncoding *
       column_encoding__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   column_encoding__free_unpacked
                     (ColumnEncoding *message,
                      ProtobufCAllocator *allocator);
/* StripeFooter methods */
void   stripe_footer__init
                     (StripeFooter         *message);
size_t stripe_footer__get_packed_size
                     (const StripeFooter   *message);
size_t stripe_footer__pack
                     (const StripeFooter   *message,
                      uint8_t             *out);
size_t stripe_footer__pack_to_buffer
                     (const StripeFooter   *message,
                      ProtobufCBuffer     *buffer);
StripeFooter *
       stripe_footer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stripe_footer__free_unpacked
                     (StripeFooter *message,
                      ProtobufCAllocator *allocator);
/* Type methods */
void   type__init
                     (Type         *message);
size_t type__get_packed_size
                     (const Type   *message);
size_t type__pack
                     (const Type   *message,
                      uint8_t             *out);
size_t type__pack_to_buffer
                     (const Type   *message,
                      ProtobufCBuffer     *buffer);
Type *
       type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   type__free_unpacked
                     (Type *message,
                      ProtobufCAllocator *allocator);
/* StripeInformation methods */
void   stripe_information__init
                     (StripeInformation         *message);
size_t stripe_information__get_packed_size
                     (const StripeInformation   *message);
size_t stripe_information__pack
                     (const StripeInformation   *message,
                      uint8_t             *out);
size_t stripe_information__pack_to_buffer
                     (const StripeInformation   *message,
                      ProtobufCBuffer     *buffer);
StripeInformation *
       stripe_information__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   stripe_information__free_unpacked
                     (StripeInformation *message,
                      ProtobufCAllocator *allocator);
/* UserMetadataItem methods */
void   user_metadata_item__init
                     (UserMetadataItem         *message);
size_t user_metadata_item__get_packed_size
                     (const UserMetadataItem   *message);
size_t user_metadata_item__pack
                     (const UserMetadataItem   *message,
                      uint8_t             *out);
size_t user_metadata_item__pack_to_buffer
                     (const UserMetadataItem   *message,
                      ProtobufCBuffer     *buffer);
UserMetadataItem *
       user_metadata_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   user_metadata_item__free_unpacked
                     (UserMetadataItem *message,
                      ProtobufCAllocator *allocator);
/* Footer methods */
void   footer__init
                     (Footer         *message);
size_t footer__get_packed_size
                     (const Footer   *message);
size_t footer__pack
                     (const Footer   *message,
                      uint8_t             *out);
size_t footer__pack_to_buffer
                     (const Footer   *message,
                      ProtobufCBuffer     *buffer);
Footer *
       footer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   footer__free_unpacked
                     (Footer *message,
                      ProtobufCAllocator *allocator);
/* PostScript methods */
void   post_script__init
                     (PostScript         *message);
size_t post_script__get_packed_size
                     (const PostScript   *message);
size_t post_script__pack
                     (const PostScript   *message,
                      uint8_t             *out);
size_t post_script__pack_to_buffer
                     (const PostScript   *message,
                      ProtobufCBuffer     *buffer);
PostScript *
       post_script__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   post_script__free_unpacked
                     (PostScript *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*IntegerStatistics_Closure)
                 (const IntegerStatistics *message,
                  void *closure_data);
typedef void (*DoubleStatistics_Closure)
                 (const DoubleStatistics *message,
                  void *closure_data);
typedef void (*StringStatistics_Closure)
                 (const StringStatistics *message,
                  void *closure_data);
typedef void (*BucketStatistics_Closure)
                 (const BucketStatistics *message,
                  void *closure_data);
typedef void (*DecimalStatistics_Closure)
                 (const DecimalStatistics *message,
                  void *closure_data);
typedef void (*ColumnStatistics_Closure)
                 (const ColumnStatistics *message,
                  void *closure_data);
typedef void (*RowIndexEntry_Closure)
                 (const RowIndexEntry *message,
                  void *closure_data);
typedef void (*RowIndex_Closure)
                 (const RowIndex *message,
                  void *closure_data);
typedef void (*Stream_Closure)
                 (const Stream *message,
                  void *closure_data);
typedef void (*ColumnEncoding_Closure)
                 (const ColumnEncoding *message,
                  void *closure_data);
typedef void (*StripeFooter_Closure)
                 (const StripeFooter *message,
                  void *closure_data);
typedef void (*Type_Closure)
                 (const Type *message,
                  void *closure_data);
typedef void (*StripeInformation_Closure)
                 (const StripeInformation *message,
                  void *closure_data);
typedef void (*UserMetadataItem_Closure)
                 (const UserMetadataItem *message,
                  void *closure_data);
typedef void (*Footer_Closure)
                 (const Footer *message,
                  void *closure_data);
typedef void (*PostScript_Closure)
                 (const PostScript *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    compression_kind__descriptor;
extern const ProtobufCMessageDescriptor integer_statistics__descriptor;
extern const ProtobufCMessageDescriptor double_statistics__descriptor;
extern const ProtobufCMessageDescriptor string_statistics__descriptor;
extern const ProtobufCMessageDescriptor bucket_statistics__descriptor;
extern const ProtobufCMessageDescriptor decimal_statistics__descriptor;
extern const ProtobufCMessageDescriptor column_statistics__descriptor;
extern const ProtobufCMessageDescriptor row_index_entry__descriptor;
extern const ProtobufCMessageDescriptor row_index__descriptor;
extern const ProtobufCMessageDescriptor stream__descriptor;
extern const ProtobufCEnumDescriptor    stream__kind__descriptor;
extern const ProtobufCMessageDescriptor column_encoding__descriptor;
extern const ProtobufCEnumDescriptor    column_encoding__kind__descriptor;
extern const ProtobufCMessageDescriptor stripe_footer__descriptor;
extern const ProtobufCMessageDescriptor type__descriptor;
extern const ProtobufCEnumDescriptor    type__kind__descriptor;
extern const ProtobufCMessageDescriptor stripe_information__descriptor;
extern const ProtobufCMessageDescriptor user_metadata_item__descriptor;
extern const ProtobufCMessageDescriptor footer__descriptor;
extern const ProtobufCMessageDescriptor post_script__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_orc_5fproto_2eproto__INCLUDED */
